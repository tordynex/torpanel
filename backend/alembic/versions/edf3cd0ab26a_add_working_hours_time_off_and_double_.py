"""Add working hours, time off, and double-booking constraint

Revision ID: edf3cd0ab26a
Revises: 10896d57d246
Create Date: 2025-08-15 09:18:54.145997

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'edf3cd0ab26a'
down_revision: Union[str, Sequence[str], None] = '10896d57d246'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_time_off',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('start_at', sa.DateTime(), nullable=False),
    sa.Column('end_at', sa.DateTime(), nullable=False),
    sa.Column('type', sa.Enum('vacation', 'sick', 'training', 'other', name='timeofftype', native_enum=False, create_constraint=True), server_default='vacation', nullable=False),
    sa.Column('reason', sa.String(), nullable=True),
    sa.CheckConstraint('end_at > start_at', name='ck_user_timeoff_order'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_time_off_end_at'), 'user_time_off', ['end_at'], unique=False)
    op.create_index(op.f('ix_user_time_off_start_at'), 'user_time_off', ['start_at'], unique=False)
    op.create_index(op.f('ix_user_time_off_user_id'), 'user_time_off', ['user_id'], unique=False)
    op.create_index('ix_user_timeoff_user_time', 'user_time_off', ['user_id', 'start_at', 'end_at'], unique=False)
    op.create_table('user_working_hours',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('weekday', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('valid_from', sa.Date(), nullable=True),
    sa.Column('valid_to', sa.Date(), nullable=True),
    sa.CheckConstraint('end_time > start_time', name='ck_uwh_time_order'),
    sa.CheckConstraint('weekday >= 0 AND weekday <= 6', name='ck_uwh_weekday'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_working_hours_user_id'), 'user_working_hours', ['user_id'], unique=False)
    op.create_index('ix_uwh_user_weekday', 'user_working_hours', ['user_id', 'weekday'], unique=False)
    op.alter_column('baybookings', 'start_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('baybookings', 'end_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('baybookings', 'end_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('baybookings', 'start_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.drop_index('ix_uwh_user_weekday', table_name='user_working_hours')
    op.drop_index(op.f('ix_user_working_hours_user_id'), table_name='user_working_hours')
    op.drop_table('user_working_hours')
    op.drop_index('ix_user_timeoff_user_time', table_name='user_time_off')
    op.drop_index(op.f('ix_user_time_off_user_id'), table_name='user_time_off')
    op.drop_index(op.f('ix_user_time_off_start_at'), table_name='user_time_off')
    op.drop_index(op.f('ix_user_time_off_end_at'), table_name='user_time_off')
    op.drop_table('user_time_off')
    # ### end Alembic commands ###
