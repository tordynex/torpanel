"""lade till specialboknin#

Revision ID: 7cc1cf810ab3
Revises: 8e1fcb9598a2
Create Date: 2025-08-24 13:12:41.579972

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7cc1cf810ab3'
down_revision: Union[str, Sequence[str], None] = '8e1fcb9598a2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('booking_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('workshop_id', sa.Integer(), nullable=False),
    sa.Column('service_item_id', sa.Integer(), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('car_id', sa.Integer(), nullable=True),
    sa.Column('registration_number', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('open', 'handled', 'converted_to_booking', name='bookingrequeststatus', native_enum=False, create_constraint=True), server_default='open', nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('(customer_id IS NOT NULL) OR (email IS NOT NULL OR phone IS NOT NULL)', name='ck_bookingreq_contact_available'),
    sa.ForeignKeyConstraint(['car_id'], ['cars.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['service_item_id'], ['workshop_service_items.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['workshop_id'], ['workshops.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_booking_requests_car_id'), 'booking_requests', ['car_id'], unique=False)
    op.create_index(op.f('ix_booking_requests_created_at'), 'booking_requests', ['created_at'], unique=False)
    op.create_index(op.f('ix_booking_requests_customer_id'), 'booking_requests', ['customer_id'], unique=False)
    op.create_index(op.f('ix_booking_requests_id'), 'booking_requests', ['id'], unique=False)
    op.create_index(op.f('ix_booking_requests_service_item_id'), 'booking_requests', ['service_item_id'], unique=False)
    op.create_index(op.f('ix_booking_requests_workshop_id'), 'booking_requests', ['workshop_id'], unique=False)
    op.create_index('ix_bookingreq_workshop_status_created', 'booking_requests', ['workshop_id', 'status', 'created_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_bookingreq_workshop_status_created', table_name='booking_requests')
    op.drop_index(op.f('ix_booking_requests_workshop_id'), table_name='booking_requests')
    op.drop_index(op.f('ix_booking_requests_service_item_id'), table_name='booking_requests')
    op.drop_index(op.f('ix_booking_requests_id'), table_name='booking_requests')
    op.drop_index(op.f('ix_booking_requests_customer_id'), table_name='booking_requests')
    op.drop_index(op.f('ix_booking_requests_created_at'), table_name='booking_requests')
    op.drop_index(op.f('ix_booking_requests_car_id'), table_name='booking_requests')
    op.drop_table('booking_requests')
    # ### end Alembic commands ###
