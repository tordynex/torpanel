"""init schema

Revision ID: f43bde41daeb
Revises: 
Create Date: 2025-08-15 08:44:53.319581

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f43bde41daeb'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('last_workshop_visited', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_customers_id'), 'customers', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('owner', 'workshop_user', 'workshop_employee', name='userrole', native_enum=False, create_constraint=True), server_default='workshop_user', nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('workshops',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('website', sa.String(), nullable=True),
    sa.Column('street_address', sa.String(), nullable=False),
    sa.Column('postal_code', sa.String(), nullable=False),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('country', sa.String(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('org_number', sa.String(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('autonexo', sa.Boolean(), nullable=True),
    sa.Column('opening_hours', sa.String(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_workshops_id'), 'workshops', ['id'], unique=False)
    op.create_table('cars',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('registration_number', sa.String(), nullable=False),
    sa.Column('brand', sa.String(), nullable=False),
    sa.Column('model_year', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('registration_number')
    )
    op.create_index(op.f('ix_cars_id'), 'cars', ['id'], unique=False)
    op.create_table('user_workshop_association',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('workshop_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['workshop_id'], ['workshops.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'workshop_id')
    )
    op.create_table('workshopbays',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('workshop_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('bay_type', sa.Enum('two_post_lift', 'four_post_lift', 'floor_space', 'alignment_rack', 'diagnosis', 'mot_bay', name='baytype', native_enum=False, create_constraint=True), nullable=False),
    sa.Column('max_length_mm', sa.Integer(), nullable=True),
    sa.Column('max_width_mm', sa.Integer(), nullable=True),
    sa.Column('max_height_mm', sa.Integer(), nullable=True),
    sa.Column('max_weight_kg', sa.Integer(), nullable=True),
    sa.Column('allow_overnight', sa.Boolean(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['workshop_id'], ['workshops.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('workshop_id', 'name', name='uq_workshopbay_workshop_name')
    )
    op.create_index('ix_workshopbay_workshop', 'workshopbays', ['workshop_id'], unique=False)
    op.create_index(op.f('ix_workshopbays_id'), 'workshopbays', ['id'], unique=False)
    op.create_table('bayclosures',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bay_id', sa.Integer(), nullable=False),
    sa.Column('start_at', sa.DateTime(), nullable=False),
    sa.Column('end_at', sa.DateTime(), nullable=False),
    sa.Column('reason', sa.String(), nullable=True),
    sa.CheckConstraint('end_at > start_at', name='ck_closure_time_order'),
    sa.ForeignKeyConstraint(['bay_id'], ['workshopbays.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_bayclosure_bay_time', 'bayclosures', ['bay_id', 'start_at', 'end_at'], unique=False)
    op.create_index(op.f('ix_bayclosures_end_at'), 'bayclosures', ['end_at'], unique=False)
    op.create_index(op.f('ix_bayclosures_id'), 'bayclosures', ['id'], unique=False)
    op.create_index(op.f('ix_bayclosures_start_at'), 'bayclosures', ['start_at'], unique=False)
    op.create_table('servicelogs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('work_performed', sa.String(), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('mileage', sa.Integer(), nullable=False),
    sa.Column('car_id', sa.Integer(), nullable=True),
    sa.Column('workshop_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['car_id'], ['cars.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['workshop_id'], ['workshops.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_servicelogs_id'), 'servicelogs', ['id'], unique=False)
    op.create_table('vehicleprofiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('car_id', sa.Integer(), nullable=False),
    sa.Column('vehicle_class', sa.Enum('motorcycle', 'small_car', 'sedan', 'suv', 'van', 'pickup', 'light_truck', name='vehicleclass_profile', native_enum=False, create_constraint=True), nullable=False),
    sa.Column('length_mm', sa.Integer(), nullable=True),
    sa.Column('width_mm', sa.Integer(), nullable=True),
    sa.Column('height_mm', sa.Integer(), nullable=True),
    sa.Column('weight_kg', sa.Integer(), nullable=True),
    sa.Column('extra_notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['car_id'], ['cars.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('car_id')
    )
    op.create_table('workshopbay_vehicleclass',
    sa.Column('bay_id', sa.Integer(), nullable=False),
    sa.Column('vehicle_class', sa.Enum('motorcycle', 'small_car', 'sedan', 'suv', 'van', 'pickup', 'light_truck', name='vehicleclass', native_enum=False, create_constraint=True), nullable=False),
    sa.ForeignKeyConstraint(['bay_id'], ['workshopbays.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('bay_id', 'vehicle_class')
    )
    op.create_table('baybookings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('workshop_id', sa.Integer(), nullable=False),
    sa.Column('bay_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start_at', sa.DateTime(), nullable=False),
    sa.Column('end_at', sa.DateTime(), nullable=False),
    sa.Column('buffer_before_min', sa.Integer(), nullable=False),
    sa.Column('buffer_after_min', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('booked', 'in_progress', 'completed', 'cancelled', 'no_show', name='bookingstatus', native_enum=False, create_constraint=True), server_default='booked', nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('car_id', sa.Integer(), nullable=True),
    sa.Column('service_log_id', sa.Integer(), nullable=True),
    sa.Column('assigned_user_id', sa.Integer(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.CheckConstraint('end_at > start_at', name='ck_booking_time_order'),
    sa.ForeignKeyConstraint(['assigned_user_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['bay_id'], ['workshopbays.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['car_id'], ['cars.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['service_log_id'], ['servicelogs.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['workshop_id'], ['workshops.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_baybooking_bay_time', 'baybookings', ['bay_id', 'start_at', 'end_at'], unique=False)
    op.create_index('ix_baybooking_workshop_time', 'baybookings', ['workshop_id', 'start_at', 'end_at'], unique=False)
    op.create_index(op.f('ix_baybookings_end_at'), 'baybookings', ['end_at'], unique=False)
    op.create_index(op.f('ix_baybookings_id'), 'baybookings', ['id'], unique=False)
    op.create_index(op.f('ix_baybookings_start_at'), 'baybookings', ['start_at'], unique=False)
    op.create_table('servicetasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('service_log_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['service_log_id'], ['servicelogs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_servicetasks_id'), 'servicetasks', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_servicetasks_id'), table_name='servicetasks')
    op.drop_table('servicetasks')
    op.drop_index(op.f('ix_baybookings_start_at'), table_name='baybookings')
    op.drop_index(op.f('ix_baybookings_id'), table_name='baybookings')
    op.drop_index(op.f('ix_baybookings_end_at'), table_name='baybookings')
    op.drop_index('ix_baybooking_workshop_time', table_name='baybookings')
    op.drop_index('ix_baybooking_bay_time', table_name='baybookings')
    op.drop_table('baybookings')
    op.drop_table('workshopbay_vehicleclass')
    op.drop_table('vehicleprofiles')
    op.drop_index(op.f('ix_servicelogs_id'), table_name='servicelogs')
    op.drop_table('servicelogs')
    op.drop_index(op.f('ix_bayclosures_start_at'), table_name='bayclosures')
    op.drop_index(op.f('ix_bayclosures_id'), table_name='bayclosures')
    op.drop_index(op.f('ix_bayclosures_end_at'), table_name='bayclosures')
    op.drop_index('ix_bayclosure_bay_time', table_name='bayclosures')
    op.drop_table('bayclosures')
    op.drop_index(op.f('ix_workshopbays_id'), table_name='workshopbays')
    op.drop_index('ix_workshopbay_workshop', table_name='workshopbays')
    op.drop_table('workshopbays')
    op.drop_table('user_workshop_association')
    op.drop_index(op.f('ix_cars_id'), table_name='cars')
    op.drop_table('cars')
    op.drop_index(op.f('ix_workshops_id'), table_name='workshops')
    op.drop_table('workshops')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_customers_id'), table_name='customers')
    op.drop_table('customers')
    # ### end Alembic commands ###
